(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,(function(r){var n=e[i][1][r];return o(n||r)}),p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:true});const audio_1=require("./audio");const client_1=require("./client");class SpotifyVoice{constructor(){this.api=SpotifyVoice.initializeAPI();this.audio=new audio_1.AudioManager;this.audioInitPromise=this.audio.init()}static initializeAPI(){const transversed=new Set;var player;var client;function walk(obj){var _a;const keys=Object.keys(obj);for(var i=0;i<keys.length;i++){if(player!=undefined&&client!=undefined)break;const property=obj[keys[i]];if(property&&typeof property=="object"){if(!transversed.has(property)){if(Object.keys(property).includes("playTrack"))player=property;else if(((_a=property.constructor)===null||_a===void 0?void 0:_a.name)=="j")client=property;transversed.add(property);walk(property)}}}}walk(window);if(player==undefined)throw Error("Failed to locate player object");if(client==undefined)throw Error("Failed to locate client object");return new client_1.SpotifyJS(player,client)}ensureReady(){return __awaiter(this,void 0,void 0,(function*(){return Promise.all([this.audioInitPromise])}))}playSong(uri){this.api.playTrack(uri)}}window["SpotifyVoice"]=SpotifyVoice},{"./audio":2,"./client":3}],2:[function(require,module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:true});exports.AudioManager=void 0;class AudioManager{constructor(){this.suppressionTimeMillis=100;this.overlapFactor=.5;this.fftSize=1024;this.numFrames=43;this.columnTruncateLength=232;this.sampleRate=44100;this.isInitialized=false;this.isRecording=false;this.freqDataQueue=[];this.freqData=new Float32Array(this.fftSize);this.silenceCounter=0}init(){return __awaiter(this,void 0,void 0,(function*(){if(this.isInitialized)throw Error("Already initialized");yield this.initWorkers();this.audioContext=new AudioContext;this.stream=yield navigator.mediaDevices.getUserMedia({audio:true});this.input=this.audioContext.createMediaStreamSource(this.stream);this.sampleRate=this.audioContext.sampleRate;this.analyser=this.input.context.createAnalyser();this.analyser.fftSize=2*this.fftSize;this.analyser.smoothingTimeConstant=0;this.input.connect(this.analyser);const period=Math.max(1,Math.round(this.numFrames*(1-this.overlapFactor)));this.timer=new Timer(period,Math.round(this.suppressionTimeMillis/(this.fftSize/this.sampleRate*1e3)));this.frameIntervalTask=setInterval(this.onAudioFrame.bind(this),this.fftSize/this.sampleRate*1e3);this.isInitialized=true;return Promise.resolve()}))}initWorkers(){return __awaiter(this,void 0,void 0,(function*(){this.encoder=new Worker("encoder.js");this.worker=new Worker("worker.js");this.worker.postMessage({action:"init",numFrames:this.numFrames,columnTruncateLength:this.columnTruncateLength});return new Promise(((resolve,reject)=>{var _a;(_a=this.worker)===null||_a===void 0?void 0:_a.addEventListener("message",(e=>{var _a;switch(e.data){case"ready":resolve();break;case"error":reject();break;case"hotword":if(!this.isRecording)this.hotwordCallback();(_a=this.timer)===null||_a===void 0?void 0:_a.suppress();break;case"silence":if(this.isRecording)this.silenceCallback();break;case"nosilence":if(this.isRecording)this.noSilenceCallback();break}}))}))}))}hotwordCallback(){this.silenceCounter=0;this.startRecord();console.log("started recording")}silenceCallback(){this.silenceCounter=this.silenceCounter+1;if(this.silenceCounter>15){console.log("stopped recording");this.stopRecord().then((audioBlob=>{const xhttprequest=new XMLHttpRequest;xhttprequest.onreadystatechange=function(){if(xhttprequest.readyState==4){console.log(xhttprequest.responseText)}};xhttprequest.open("POST","http://127.0.0.1:5000/submit",true);xhttprequest.send(audioBlob)}))}}noSilenceCallback(){this.silenceCounter=0}startRecord(){if(!this.isInitialized)throw Error("not initialized");if(!(this.analyser&&this.audioContext&&this.encoder&&this.input))throw Error("some components are undefined, was init() completed?");if(this.isRecording)return;this.isRecording=true;this.processor=this.input.context.createScriptProcessor(4096,1,1);this.encoder.postMessage({cmd:"init",config:{samplerate:44100,bps:16,channels:1,compression:5}});if(!this.processor)throw Error();this.processor.onaudioprocess=e=>{var _a,_b;if(!this.isRecording)return;const buffer=e.inputBuffer.getChannelData(0);(_a=this.worker)===null||_a===void 0?void 0:_a.postMessage({action:"silence",buf:buffer});(_b=this.encoder)===null||_b===void 0?void 0:_b.postMessage({cmd:"encode",buf:buffer})};this.analyser.connect(this.processor);this.processor.connect(this.audioContext.destination)}onAudioFrame(){var _a,_b,_c;(_a=this.analyser)===null||_a===void 0?void 0:_a.getFloatFrequencyData(this.freqData);if(this.freqData[0]===-Infinity){return}this.freqDataQueue.push(this.freqData.slice(0,this.columnTruncateLength));if(this.freqDataQueue.length>this.numFrames){this.freqDataQueue.shift()}const shouldFire=(_b=this.timer)===null||_b===void 0?void 0:_b.tick();if(shouldFire){(_c=this.worker)===null||_c===void 0?void 0:_c.postMessage({action:"predict",freqDataQueue:this.freqDataQueue})}}stopRecord(){if(!this.isRecording)throw Error("Not recording");if(!(this.processor&&this.analyser&&this.encoder&&this.stream&&this.audioContext))throw Error("some components are undefined, was init() completed?");this.isRecording=false;this.encoder.postMessage({cmd:"finish"});this.processor.disconnect(this.audioContext.destination);this.analyser.disconnect(this.processor);return new Promise(((resolve,reject)=>{if(!this.encoder)throw Error("some components are undefined, was init() completed?");this.encoder.onmessage=e=>{switch(e.data.cmd){case"end":resolve(e.data.buf);break;case"error":reject()}}}))}close(){if(!this.isInitialized)if(!this.isInitialized)throw Error("not initialized");if(!(this.stream&&this.encoder&&this.worker&&this.audioContext&&this.analyser&&this.processor))throw Error("some components are undefined, was init() completed?");if(this.isRecording)this.stopRecord();clearInterval(this.frameIntervalTask);const tracks=this.stream.getAudioTracks();tracks.forEach((track=>track.stop()));this.audioContext.close();this.analyser.disconnect();this.processor.disconnect();this.encoder.terminate();this.worker.terminate();this.isInitialized=false}}exports.AudioManager=AudioManager;class Timer{constructor(period,suppressionPeriod){this.period=period;this.suppressionTime=suppressionPeriod==null?0:suppressionPeriod;this.counter=0}tick(){this.counter++;const shouldFire=this.counter%this.period===0&&(this.suppressionOnset==undefined||this.counter-this.suppressionOnset>this.suppressionTime);return shouldFire}suppress(){this.suppressionOnset=this.counter}}},{}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SpotifyJS=void 0;class SpotifyJS{constructor(player,client){this.p=player;this.c=client;this.np=client.nowPlaying}pause(){this.p.pause()}resume(){this.p.resume()}mute(){if(!this.c.mute)this.c.toggleMute()}unmute(){if(this.c.mute)this.c.toggleMute()}seek(elapsedTimeMs){this.c.seek(elapsedTimeMs)}playTrack(trackURI){this.p.playTrack(trackURI,{})}playFromArtist(artistURI,songIndex){this.p.playFromArtist(artistURI,{index:songIndex%10})}addToQueue(trackURI){this.c._enqueueAlbum(trackURI)}setRepeat(mode){var modeNumber=0;switch(mode){case"off":modeNumber=0;break;case"queue":modeNumber=1;break;case"single":modeNumber=2;break}const modeDiff=modeNumber-this.c.repeat();if(modeDiff==0)return;if(modeDiff>0){for(var i=0;i++;i<modeDiff)this.c.toggleRepeat()}else{for(var i=0;i++;i<Math.abs(modeDiff*2)%3)this.c.toggleRepeat()}}changeVolume(volume){this.c.changeVolume(volume)}skipToNext(){this.c.skipToNext()}skipToPrevious(){this.c.skipToPrevious()}togglePlay(){this.c.togglePlay()}toggleMute(){return this.c.toggleMute()}toggleShuffle(){return this.c.toggleShuffle()}toggleRepeat(){return this.c.toggleRepeat()}isMuted(){return this.c.mute()}isPlaying(){return this.c.playing()}isActuallyPlaying(){return this.c.actuallyPlaying()}isShuffling(){return this.c.shuffle()}isRepeating(){return this.c.repeat()==0?false:true}volume(){return this.c.volume()}unmutedVolume(){return this.c._unmutedVolume}repeatMode(){switch(this.c.repeat()){case 0:return"off";case 1:return"queue";case 2:return"single";default:return"unknown"}}currentTrackName(){return this.np.name()}currentTrackURI(){return this.np.trackURI()}currentTrackArtists(){const artists=[];this.np.artists().forEach((a=>{artists.push({name:a.name,uri:a.uri})}));return artists}currentTrackHasLyrics(){return this.c.trackHasLyrics()}currentTrackDuration(){return this.c.duration()}currentTrackElapsed(){const timeElapsed=this.c.elapsed().split(":");return parseInt(timeElapsed[0])*60+parseInt(timeElapsed[1])}currentTrackRemaining(){const timeRemaining=this.c.remaining().split(":");return parseInt(timeRemaining[0])*60+parseInt(timeRemaining[1])}currentTrackBannerURI(){return this.np.banUri()}currentTrackImageURI(){return this.np.imageURI()}currentTrackImageHeight(){return this.np.imageHeight()}currentTrackIsAd(){return this.np.isAd()}currentTrackIsEpisode(){return this.np.isEpisode()}currentTrackIsTrack(){return this.np.isTrack()}currentTrackIsVideoAd(){return this.np.isVideoAd()}}exports.SpotifyJS=SpotifyJS},{}]},{},[1]);